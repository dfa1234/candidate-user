{"version":3,"sources":["./src/environments/environment.ts","./src/app/stores/album.store.ts","./src/app/sevices/album.service.ts","./src/app/pages/photo/photo.component.ts","./src/app/app.component.ts","./src/app/sevices/user.service.ts","./src/app/pages/user-table/user-table.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/stores/users.store.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Store, StoreConfig} from '@datorama/akita';\nimport {Photo} from \"../models/photo.model\";\n\nexport interface AlbumState {\n    album: Photo;\n}\n\nexport function createInitialState(): AlbumState {\n    return {\n        album: {\n            title: null,\n            thumbnailUrl: null,\n            url: null\n        }\n    };\n}\n\n@StoreConfig({name: 'album'})\nexport class AlbumStore extends Store<AlbumState> {\n    constructor() {\n        super(createInitialState());\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {jsonPlaceHolderUrl, UserService} from './user.service';\nimport {AlbumState, AlbumStore} from \"../stores/album.store\";\nimport {Photo} from \"../models/photo.model\";\nimport {Query} from \"@datorama/akita\";\n\nexport const photosUrl = 'photos';\n\n@Injectable()\nexport class AlbumService extends Query<AlbumState> {\n\n    constructor(protected http: HttpClient, private albumStore: AlbumStore, private userService: UserService) {\n        super(albumStore);\n        this.userService.select('activeUserId').subscribe(userId => {\n            this.http.get<Photo>(`${jsonPlaceHolderUrl}/${photosUrl}/${userId}`)\n                .subscribe((album) => {\n                    this.albumStore.update({album})\n                })\n        })\n    }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Photo} from '../../models/photo.model';\nimport {AlbumService} from '../../sevices/album.service';\nimport {Observable} from 'rxjs';\nimport {MVContext} from '../../models/mv-context.model';\n\n@Component({\n    selector: 'app-photo',\n    template: `\n        <!--        <ng-container *ngIf=\"photoContext$ | async as photoContext\">-->\n        <!--            <div *ngIf=\"photoContext.loading\">...loading</div>-->\n        <!--            <div *ngIf=\"photoContext.errorResponse\">{{photoContext.errorResponse.message}}</div>-->\n        <!--            <ng-container *ngIf=\"photoContext.data as photo\">-->\n        <ng-container *ngIf=\"photoContext$ | async as photo\">\n            <h2 class=\"photo-title\">{{photo.title}}</h2>\n            <img [src]=\"photo.thumbnailUrl\" alt=\"\">\n        </ng-container>\n        <!--        </ng-container>-->\n    `,\n    styles: [`\n        :host {\n            display: flex;\n            justify-content: center;\n            flex-direction: column;\n            align-items: center;\n        }\n\n        .photo-title {\n            font-size: 30px;\n        }\n    `],\n    providers: [AlbumService]\n})\nexport class PhotoComponent implements OnInit {\n\n    photoContext$ = this.albumService.select('album');\n\n    constructor(private albumService: AlbumService) {\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {UsersStore} from \"./stores/users.store\";\nimport {AlbumStore} from \"./stores/album.store\";\nimport {UserService} from \"./sevices/user.service\";\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <app-user-table></app-user-table>\n        <app-photo></app-photo>\n    `,\n    styles: [],\n    providers: [UsersStore, AlbumStore, UserService]\n})\nexport class AppComponent implements OnInit {\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {User} from '../models/user.model';\nimport {UsersState, UsersStore} from \"../stores/users.store\";\nimport {Query} from \"@datorama/akita\";\n\nexport const jsonPlaceHolderUrl = 'https://jsonplaceholder.typicode.com';\nexport const userUrl = 'users';\n\n@Injectable()\nexport class UserService extends Query<UsersState> {\n\n    constructor(protected http: HttpClient, private usersStore: UsersStore) {\n        super(usersStore)\n        this.http.get<User[]>(`${jsonPlaceHolderUrl}/${userUrl}`)\n            .subscribe((users) => {\n                this.usersStore.update({users});\n            })\n    }\n\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {UserService} from '../../sevices/user.service';\nimport {UsersStore} from \"../../stores/users.store\";\n\n@Component({\n    selector: 'app-user-table',\n    template: `\n        <!--        <ng-container *ngIf=\"usersContext$ | async as userContext\">-->\n        <!--            <div *ngIf=\"userContext.loading\">...loading</div>-->\n        <!--            <div *ngIf=\"userContext.errorResponse\">{{userContext.errorResponse.message}}</div>-->\n        <!--            <table class=\"table\" *ngIf=\"userContext.data as users\">-->\n        <ng-container *ngIf=\"usersContext$ | async as users\">\n            <table class=\"table\">\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Username</th>\n                    <th>Email</th>\n                    <th>Address</th>\n                    <th>Phone</th>\n                    <th>Website</th>\n                    <th>Company</th>\n                    <th>Number of albums</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr *ngFor=\"let user of users\" (click)=\"userClick(user.id)\"\n                    [class.selected]=\"(selectedUserId$ | async) === user.id\">\n                    <td>{{user.name}}</td>\n                    <td>{{user.username}}</td>\n                    <td>{{user.email}}</td>\n                    <td>{{user.address.city }}/{{user.address.street}}/{{user.address.suite}}</td>\n                    <td>{{ user.phone }}</td>\n                    <td>\n                        <a href=\"http://{{ user.website }}\" target=\"_blank\">\n                            {{user.website}}\n                        </a>\n                    </td>\n                    <td>{{user.company.name}}</td>\n                    <td>{{user.id}}</td>\n                </tr>\n                </tbody>\n            </table>\n        </ng-container>\n    `,\n    styles: [`\n        table {\n            width: 100%;\n            border-collapse: collapse;\n        }\n\n        th {\n            text-align: start;\n        }\n\n        tr {\n            height: 50px;\n        }\n\n        tr.selected {\n            background-color: #f0f0f5;\n\n        }\n\n        tbody tr:hover {\n            cursor: pointer;\n            background-color: gray;\n            color: white;\n        }\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: []\n})\nexport class UserTableComponent implements OnInit {\n\n    usersContext$ = this.userService.select('users')\n    selectedUserId$ = this.userService.select('activeUserId')\n\n    constructor(private userService: UserService, private usersStore: UsersStore) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    userClick(userId: number) {\n        this.usersStore.update({activeUserId: userId})\n    }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {UserTableComponent} from './pages/user-table/user-table.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { PhotoComponent } from './pages/photo/photo.component';\nimport { NG_ENTITY_SERVICE_CONFIG } from '@datorama/akita-ng-entity-service';\nimport { AkitaNgDevtools } from '@datorama/akita-ngdevtools';\nimport { AkitaNgRouterStoreModule } from '@datorama/akita-ng-router-store';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        UserTableComponent,\n        PhotoComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        HttpClientModule,\n        environment.production ? [] : AkitaNgDevtools.forRoot(),\n        AkitaNgRouterStoreModule.forRoot()\n    ],\n    providers: [{ provide: NG_ENTITY_SERVICE_CONFIG, useValue: { baseUrl: 'https://jsonplaceholder.typicode.com' }}],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Store, StoreConfig} from '@datorama/akita';\nimport {User} from \"../models/user.model\";\n\nexport interface UsersState {\n    users: User[];\n    activeUserId: number;\n}\n\nexport function createInitialState(): UsersState {\n    return {\n        users: [],\n        activeUserId: null\n    };\n}\n\n@StoreConfig({name: 'users'})\nexport class UsersStore extends Store<UsersState> {\n    constructor() {\n        super(createInitialState());\n    }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}